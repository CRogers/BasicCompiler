module Builtins

open Tree

$py(numeric=['Add','Sub','Div','Mul'])\
$py(numcomp=['Lt','Gt','LtEq','GtEq','Eq'])\
$py(boolean=['BoolAnd', 'BoolOr'])\

$py(intsizes=[8,16,32,64])\

let binopToType binop ltype rtype = match (binop, ltype, rtype) with
$for(size in intsizes)\
$for(x in numeric)\
    | ($(x), UserType "System::Int$(size)", UserType "System::Int$(size)") -> Some <| UserType "System::Int$(size)"
$endfor\
$endfor\
$for(size in intsizes)\
$for(x in numcomp)\
    | ($(x), UserType "System::Int$(size)", UserType "System::Int$(size)") -> Some <| UserType "System::Bool"
$endfor\
$endfor\
$for(x in boolean)\
    | ($(x), UserType "System::Bool", UserType "System::Bool") -> Some <| UserType "System::Bool"
$endfor\
    | _ -> None